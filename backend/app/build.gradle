plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    runtimeOnly 'org.postgresql:postgresql' 
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    // JaCoCo Plugin hinzuf√ºgen
    testImplementation 'org.jacoco:org.jacoco.core:0.8.8'  // oder eine neuere Version
}

bootJar {
    archiveFileName = 'app.jar'
}

// Disable JaCoCo temporarily if needed
tasks.withType(JacocoReport) {
    enabled = false
}

// Tasks named 'test' should use JUnit Platform
tasks.named('test') {
    useJUnitPlatform()
}

// JaCoCo Report Settings (optional)
// You can re-enable JaCoCo report generation if necessary
jacoco {
    toolVersion = "0.8.8" // Ensure you have the latest version
    reportsDir = file("$buildDir/reports/jacoco")
}

test {
    useJUnitPlatform()

    // Ensure that JaCoCo can generate code coverage reports
    jacoco {
        enabled = true
    }
}
